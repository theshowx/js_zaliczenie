{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szymo\\\\Desktop\\\\studia\\\\kurs programista js\\\\Zaliczenie\\\\pb_app\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from \"react\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      surname: \"\",\n      username: \"\",\n      email: \"\",\n      pass: \"\",\n      accept: false,\n      message: \"\",\n      errors: {\n        name: false,\n        surname: false,\n        username: false,\n        email: false,\n        pass: false,\n        accept: false\n      }\n    };\n    this.messages = {\n      name_incorrect: \" Imię może składać się jedynie z liter i nie może zawierać spacji\",\n      surname_incorrect: \" Nazwisko może składać się jedynie z liter i nie może zawierać spacji\",\n      username_incorrect: \" Nazwa musi być dłuższa niż 10 znaków i nie może zawierać spacji\",\n      email_incorrect: \" Brak @ lub . w emailu\",\n      password_incorrect: \" Hasło musi mieć 8 znaków\",\n      accept_incorrect: \" Niepotwierdzona zgoda\"\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const type = e.target.type;\n\n      if (type === \"text\" || type === \"password\" || type === \"email\") {\n        const value = e.target.value;\n        this.setState({\n          [name]: value\n        });\n      } else if (type === \"checkbox\") {\n        const checked = e.target.checked;\n        this.setState({\n          [name]: checked\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const validation = this.formValidation();\n\n      if (validation.correct) {\n        this.setState({\n          name: \"\",\n          surname: \"\",\n          username: \"\",\n          email: \"\",\n          pass: \"\",\n          accept: false,\n          message: \"Formularz został wysłany\",\n          errors: {\n            name: false,\n            surname: false,\n            username: false,\n            email: false,\n            pass: false,\n            accept: false\n          }\n        });\n      } else {\n        this.setState({\n          errors: {\n            name: !validation.name,\n            surname: !validation.surname,\n            username: !validation.username,\n            email: !validation.email,\n            pass: !validation.password,\n            accept: !validation.accept\n          }\n        });\n      }\n    };\n  }\n\n  formValidation() {\n    let name = false;\n    let surname = false;\n    let username = false;\n    let email = false;\n    let password = false;\n    let accept = false;\n    let correct = false;\n    if (this.state.username.match(\"^[A-Za-z]+$\")) if (this.state.username.length > 10 && this.state.username.indexOf(\" \") === -1) {\n      username = true;\n    }\n    if (this.state.email.indexOf(\"@\") !== -1 && this.state.email.indexOf(\".\") !== -1) email = true;\n    if (this.state.pass.length === 8) password = true;\n    if (this.state.accept) accept = true;\n    if (username && email && password && accept) correct = true;\n    return {\n      correct,\n      username,\n      email,\n      password,\n      accept\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(\"update\");\n\n    if (this.state.message !== \"\") {\n      setTimeout(() => this.setState({\n        message: \"\"\n      }), 3000);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Twoje imi\\u0119:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"user\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), this.state.errors.username && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.messages.username_incorrect)), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Twoje email:\", React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.state.errors.email && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.messages.email_incorrect)), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Twoje has\\u0142o:\", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass\",\n      id: \"password\",\n      value: this.state.pass,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), this.state.errors.pass && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.messages.password_incorrect)), React.createElement(\"label\", {\n      htmlFor: \"accept\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"accept\",\n      id: \"accept\",\n      checked: this.state.accept,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), \" Wyra\\u017Cam zgody wszelakie\", this.state.errors.accept && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.messages.accept_incorrect)), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Zapisz si\\u0119\")), this.state.message && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.message));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/Desktop/studia/kurs programista js/Zaliczenie/pb_app/src/components/Home.js"],"names":["React","Component","Home","state","name","surname","username","email","pass","accept","message","errors","messages","name_incorrect","surname_incorrect","username_incorrect","email_incorrect","password_incorrect","accept_incorrect","handleChange","e","target","type","value","setState","checked","handleSubmit","preventDefault","validation","formValidation","correct","password","match","length","indexOf","componentDidUpdate","console","log","setTimeout","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        name: \"\",\r\n        surname: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        pass: \"\",\r\n        accept: false,\r\n        message: \"\",\r\n\r\n        errors: {\r\n            name: false,\r\n            surname: false,\r\n            username: false,\r\n            email: false,\r\n            pass: false,\r\n            accept: false\r\n        }\r\n    }\r\n\r\n    messages = {\r\n        name_incorrect: \" Imię może składać się jedynie z liter i nie może zawierać spacji\",\r\n        surname_incorrect: \" Nazwisko może składać się jedynie z liter i nie może zawierać spacji\",\r\n        username_incorrect: \" Nazwa musi być dłuższa niż 10 znaków i nie może zawierać spacji\",\r\n        email_incorrect: \" Brak @ lub . w emailu\",\r\n        password_incorrect: \" Hasło musi mieć 8 znaków\",\r\n        accept_incorrect: \" Niepotwierdzona zgoda\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const type = e.target.type;\r\n        if (type === \"text\" || type === \"password\" || type === \"email\") {\r\n            const value = e.target.value;\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        } else if (type === \"checkbox\") {\r\n            const checked = e.target.checked;\r\n            this.setState({\r\n                [name]: checked\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const validation = this.formValidation()\r\n\r\n        if (validation.correct) {\r\n            this.setState({\r\n                name: \"\",\r\n                surname: \"\",\r\n                username: \"\",\r\n                email: \"\",\r\n                pass: \"\",\r\n                accept: false,\r\n                message: \"Formularz został wysłany\",\r\n\r\n                errors: {\r\n                    name: false,\r\n                    surname: false,\r\n                    username: false,\r\n                    email: false,\r\n                    pass: false,\r\n                    accept: false\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                errors: {\r\n                    name: !validation.name,\r\n                    surname: !validation.surname,\r\n                    username: !validation.username,\r\n                    email: !validation.email,\r\n                    pass: !validation.password,\r\n                    accept: !validation.accept\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    formValidation() {\r\n        let name = false;\r\n        let surname = false;\r\n        let username = false;\r\n        let email = false;\r\n        let password = false;\r\n        let accept = false;\r\n        let correct = false;\r\n        \r\n        if(this.state.username.match(\"^[A-Za-z]+$\"))\r\n        if (this.state.username.length > 10 && this.state.username.indexOf(\" \") === -1) {\r\n            username = true;\r\n        }\r\n        if (this.state.email.indexOf(\"@\") !== -1 && this.state.email.indexOf(\".\") !== -1) email = true;\r\n        if (this.state.pass.length === 8) password = true;\r\n        if (this.state.accept) accept = true;\r\n        if (username && email && password && accept) correct = true;\r\n\r\n        return ({\r\n            correct,\r\n            username,\r\n            email,\r\n            password,\r\n            accept\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"update\");\r\n        if (this.state.message !== \"\") {\r\n            setTimeout(() => this.setState({\r\n                message: \"\"\r\n            }), 3000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n                <form onSubmit={this.handleSubmit} noValidate>\r\n                    <label htmlFor=\"user\">Twoje imię:\r\n                <input type=\"text\" name=\"username\" id=\"user\" value={this.state.username} onChange={this.handleChange} />\r\n                        {this.state.errors.username && <span>{this.messages.username_incorrect}</span>}\r\n                    </label>\r\n\r\n                    <label htmlFor=\"email\">Twoje email:\r\n                <input type=\"email\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                        {this.state.errors.email && <span>{this.messages.email_incorrect}</span>}\r\n                    </label>\r\n\r\n                    <label htmlFor=\"password\">Twoje hasło:\r\n                <input type=\"password\" name=\"pass\" id=\"password\" value={this.state.pass} onChange={this.handleChange} />\r\n                        {this.state.errors.pass && <span>{this.messages.password_incorrect}</span>}\r\n                    </label>\r\n\r\n                    <label htmlFor=\"accept\">\r\n                        <input type=\"checkbox\" name=\"accept\" id=\"accept\" checked={this.state.accept} onChange={this.handleChange} /> Wyrażam zgody wszelakie\r\n                {this.state.errors.accept && <span>{this.messages.accept_incorrect}</span>}\r\n                    </label>\r\n\r\n                    <button>Zapisz się</button>\r\n                </form>\r\n                {this.state.message && <h3>{this.state.message}</h3>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}